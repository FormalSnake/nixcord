name: Update Dorion

on:
  schedule:
    - cron: "0 0 */2 * *" # Every 2 days
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-dorion:
    name: Update Dorion
    runs-on: ubuntu-latest
    timeout-minutes: 4
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1

      - uses: DeterminateSystems/nix-installer-action@v16

      - name: Get old version
        id: old-version
        shell: bash
        run: |
          OLD_VERSION=$(perl -ne 'print $1 if /^\s*version\s*=\s*"([^"]+)";/' pkgs/dorion.nix)
          echo "version=$OLD_VERSION" >> $GITHUB_OUTPUT

      - name: Update Dorion
        id: update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! nix build --impure --expr 'let pkgs = import <nixpkgs> { config.allowUnfree = true; }; in (pkgs.callPackage ./pkgs/dorion.nix {}).passthru.updateScript'; then
            echo "Failed to build the update script."
            exit 1
          fi
          if ! ./result/bin/dorion-update; then
            echo "Update script failed to execute successfully"
            exit 1
          fi
          echo "Dorion update script finished."
          rm ./result

      - name: Get new version
        id: new-version
        shell: bash
        run: |
          NEW_VERSION=$(perl -ne 'print $1 if /^\s*version\s*=\s*"([^"]+)";/' pkgs/dorion.nix)
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Test Build
        env:
          NIXPKGS_ALLOW_UNFREE: 1
        run: |
          if ! nix-build -E "let pkgs = import <nixpkgs> {}; in pkgs.callPackage ./pkgs/dorion.nix {}"; then
            echo "Build failed"
            exit 1
          fi
          unlink result

      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: success() && steps.old-version.outputs.version != steps.new-version.outputs.version
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          if [[ -n "$(git status --porcelain pkgs/dorion.nix)" ]]; then
            git add pkgs/dorion.nix
            git commit -m "github: update dorion ${{ steps.old-version.outputs.version }} -> ${{ steps.new-version.outputs.version }}"

            echo "Pushing changes..."
            for i in {1..3}; do
              git fetch origin
              git pull --rebase origin ${{ github.ref_name }}
              if git push origin HEAD:${{ github.ref_name }}; then
                break
              fi
              if [[ $i == 3 ]]; then
                 exit 1
              fi
              sleep 5
            done
          else
            echo "`git status` shows no changes to `pkgs/dorion.nix`. Skipping commit"
          fi
